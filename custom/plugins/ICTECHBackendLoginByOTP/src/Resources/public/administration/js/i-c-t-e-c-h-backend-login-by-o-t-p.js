!function(n){var e={};function o(i){if(e[i])return e[i].exports;var t=e[i]={i:i,l:!1,exports:{}};return n[i].call(t.exports,t,t.exports,o),t.l=!0,t.exports}o.m=n,o.c=e,o.d=function(n,e,i){o.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:i})},o.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},o.t=function(n,e){if(1&e&&(n=o(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var i=Object.create(null);if(o.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var t in n)o.d(i,t,function(e){return n[e]}.bind(null,t));return i},o.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return o.d(e,"a",e),e},o.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},o.p="/bundles/ictechbackendloginbyotp/",o(o.s="OW7Z")}({FTU5:function(n){n.exports=JSON.parse('{"sw-login":{"index":{"buttonSendOTP":"Send Otp"},"verify":{"otpHeadlineForm":"Enter Otp","labelOtp":"OTP","placeholderOtp":"Enter your OTP..."}}}')},HeCZ:function(n){n.exports=JSON.parse("{}")},OW7Z:function(n,e,o){"use strict";o.r(e);var i=o("FTU5"),t=o("HeCZ"),r=Shopware,s=r.Component,l=r.Mixin,a=r.Context,c=r.Application;s.override("sw-login-login",{template:'{% block sw_login_login %}\n    {% block sw_login_login_username %}\n        <div v-if="loginUserDiv">\n            <form\n            class="sw-login-login"\n            @submit.prevent="createUserOtpWithEmail"\n        >\n            {% block sw_login_login_form_headline %}\n                <h2 class="sw-login__content-headline">\n                    {{ $tc(\'sw-login.index.headlineForm\') }}\n                </h2>\n            {% endblock %}\n\n            {% block sw_login_login_alert %}\n                <sw-alert\n                    v-if="showLoginAlert"\n                    variant="info"\n                    appearance="default"\n                    :show-icon="true"\n                    :closable="false"\n                >\n                    {{ loginAlertMessage }}\n                </sw-alert>\n            {% endblock %}\n\n            {% block sw_login_login_user_field %}\n                <sw-text-field\n                    v-model="username"\n                    v-autofocus\n                    :label="$tc(\'sw-login.index.labelUsername\')"\n                    :placeholder="$tc(\'sw-login.index.placeholderUsername\')"\n                    :disabled="showLoginAlert"\n                    required\n                />\n            {% endblock %}\n\n            {% block sw_login_login_password_field %}\n\n            {% endblock %}\n\n            {% block sw_login_login_submit %}\n                <div class="sw-login__submit">\n                    {% block sw_login_login_forgot_password %}\n                        <router-link\n                            :to="{ name: \'sw.login.index.recovery\' }"\n                            class="sw-login__forgot-password-action"\n                        >\n                            {{ $tc(\'sw-login.index.forgottenPasswordLink\') }}\n                        </router-link>\n                    {% endblock %}\n                    {% block sw_login_login_submit_button %}\n                        <sw-button\n                            :disabled="username.length <= 0 || showLoginAlert"\n                            class="sw-login__login-action"\n                            variant="primary"\n                        >\n                            {{ $tc(\'sw-login.index.buttonSendOTP\') }}\n                        </sw-button>\n                    {% endblock %}\n                </div>\n            {% endblock %}\n        </form>\n        </div>\n\n        <div v-else-if="loginOtpDiv">\n            <form  class="sw-login-login"\n                   @submit.prevent="verifyOtpWithEmail">\n                {% block sw_login_verify_form_headline %}\n                    <h2 class="sw-login__content-headline">\n                        {{ $tc(\'sw-login.verify.otpHeadlineForm\') }}\n                    </h2>\n                {% endblock %}\n\n                {% block sw_login_verify_alert %}\n                    <sw-alert\n                        v-if="showLoginAlert"\n                        variant="info"\n                        appearance="default"\n                        :show-icon="true"\n                        :closable="false"\n                    >\n                        {{ loginAlertMessage }}\n                    </sw-alert>\n                {% endblock %}\n\n                {% block sw_login_verify_otp_field %}\n                    <sw-text-field\n                        v-model="otp"\n                        v-autofocus\n                        :label="$tc(\'sw-login.verify.labelOtp\')"\n                        :placeholder="$tc(\'sw-login.verify.placeholderOtp\')"\n                        :disabled="showLoginAlert"\n                        required\n                    />\n                {% endblock %}\n                {% block sw_login_verify_submit %}\n                    {% block sw_login_verify_submit_button %}\n                        <sw-button\n                            :disabled="otp.length <= 0 || showLoginAlert"\n                            class="sw-login__login-action"\n                            variant="primary"\n                        >\n                            {{ $tc(\'sw-login.index.buttonLogin\') }}\n                        </sw-button>\n                    {% endblock %}\n                {% endblock %}\n\n            </form>\n        </div>\n\n    {% endblock %}\n\n{% endblock %}\n',inject:["configService"],mixins:[l.getByName("notification")],data:function(){return{username:"",loginAlertMessage:"",loginUserDiv:"",loginOtpDiv:"",otp:""}},computed:{showLoginAlert:function(){return"string"==typeof this.loginAlertMessage&&this.loginAlertMessage.length>=1}},created:function(){this.loginUserDiv=!0,this.loginOtpDiv=!1,localStorage.getItem("sw-admin-locale")||Shopware.State.dispatch("setAdminLocale",navigator.language)},methods:{createUserOtpWithEmail:function(){var n=this;return c.getContainer("init").httpClient.post("/backend/login/generateotp",{username:this.username},{baseURL:a.api.apiPath}).then((function(e){"success"==e.data.type&&(n.loginUserDiv=!1,n.loginOtpDiv=!0)}))},verifyOtpWithEmail:function(){var n=this;return this.$emit("is-loading"),c.getContainer("init").httpClient.post("/backend/login/verifyotp",{username:this.username,otp:this.otp,grant_type:"password",client_id:"administration",scopes:"write"},{baseURL:a.api.apiPath}).then((function(e){if("success"==e.data.type){var o=n.loginService.setBearerAuthentication({access:e.data.access_token,refresh:e.data.refresh_token,expiry:e.data.expires_in});return n.handleLoginSuccess(),o}n.$emit("is-not-loading")})).catch((function(e){n.otp="",n.handleLoginError(e),n.$emit("is-not-loading")}))},handleLoginSuccess:function(){var n=this;this.$emit("login-success");var e=new Promise((function(n){setTimeout(n,150)}));return this.licenseViolationService&&this.licenseViolationService.removeTimeFromLocalStorage(this.licenseViolationService.key.showViolationsKey),e.then((function(){n.$parent.isLoginSuccess=!1,n.forwardLogin(),sessionStorage.getItem("sw-login-should-reload")&&(sessionStorage.removeItem("sw-login-should-reload"),window.location.reload(!0))}))},handleLoginError:function(n){var e=this;this.$emit("login-error"),setTimeout((function(){e.$emit("login-error")}),500),this.createNotificationFromResponse(n)}}});var g=Shopware,d=g.Component,u=g.Mixin,p=g.Application,h=g.Context;d.register("sw-login-verify",{template:'{% block sw_login_verify %}\n    <form  class="sw-login-login"\n           @submit.prevent="verifyOtpWithEmail">\n        {% block sw_login_login_form_headline %}\n            <h2 class="sw-login__content-headline">\n                {{ $tc(\'sw-login.verify.otpHeadlineForm\') }}\n            </h2>\n        {% endblock %}\n\n        {% block sw_login_verify_alert %}\n            <sw-alert\n                v-if="showLoginAlert"\n                variant="info"\n                appearance="default"\n                :show-icon="true"\n                :closable="false"\n            >\n                {{ loginAlertMessage }}\n            </sw-alert>\n        {% endblock %}\n\n        {% block sw_login_verify_otp_field %}\n            <sw-text-field\n                v-model="otp"\n                v-autofocus\n                :label="$tc(\'sw-login.verify.labelOtp\')"\n                :placeholder="$tc(\'sw-login.verify.placeholderOtp\')"\n                :disabled="showLoginAlert"\n                required\n            />\n        {% endblock %}\n        {% block sw_login_verify_submit %}\n            {% block sw_login_verify_submit_button %}\n                <sw-button\n                    :disabled="otp.length <= 0 || showLoginAlert"\n                    class="sw-login__login-action"\n                    variant="primary"\n                >\n                    {{ $tc(\'sw-login.index.buttonLogin\') }}\n                </sw-button>\n            {% endblock %}\n        {% endblock %}\n\n    </form>\n{% endblock %}\n',inject:["licenseViolationService","loginService"],mixins:[u.getByName("notification")],data:function(){return{username:"",loginAlertMessage:"",otp:""}},computed:{showLoginAlert:function(){return"string"==typeof this.loginAlertMessage&&this.loginAlertMessage.length>=1}},created:function(){console.log("verify component"),this.username=localStorage.getItem("username"),localStorage.getItem("sw-admin-locale")||Shopware.State.dispatch("setAdminLocale",navigator.language),this.$emit("is-not-loading")},methods:{verifyOtpWithEmail:function(){var n=this;return this.$emit("is-loading"),console.log(this.username),p.getContainer("init").httpClient.post("/backend/login/verifyotp",{username:this.username,otp:this.otp,grant_type:"password",client_id:"administration",scopes:"write"},{baseURL:h.api.apiPath}).then((function(e){console.log(e);var o=n.loginService.setBearerAuthentication({access:e.data.access_token,refresh:e.data.refresh_token,expiry:e.data.expires_in});return n.$emit("is-not-loading"),o})).catch((function(e){n.otp="",n.handleLoginError(e),n.$emit("is-not-loading")}))},handleLoginSuccess:function(){var n=this;this.otp="",this.$emit("login-success");var e=new Promise((function(n){setTimeout(n,150)}));return this.licenseViolationService&&this.licenseViolationService.removeTimeFromLocalStorage(this.licenseViolationService.key.showViolationsKey),e.then((function(){n.$parent.isLoginSuccess=!1,n.forwardLogin(),sessionStorage.getItem("sw-login-should-reload")&&(sessionStorage.removeItem("sw-login-should-reload"),window.location.reload(!0))}))},forwardLogin:function(){var n=JSON.parse(sessionStorage.getItem("sw-admin-previous-route"));sessionStorage.removeItem("sw-admin-previous-route"),!Shopware.Context.app.firstRunWizard||this.$router.history.current.name.startsWith("sw.first.run.wizard.")?null!=n&&n.fullPath?this.$router.push(n.fullPath):this.$router.push({name:"core"}):this.$router.push({name:"sw.first.run.wizard.index"})},handleLoginError:function(n){this.otp="",this.$super("handleLoginError",error)}}}),Shopware.Locale.extend("en-GB",i),Shopware.Locale.extend("de-DE",t),console.log("call main js")}});